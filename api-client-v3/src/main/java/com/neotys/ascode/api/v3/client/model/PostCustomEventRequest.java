/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.neotys.ascode.api.v3.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * PostCustomEventRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-06T15:30:36.854Z[GMT]")
public class PostCustomEventRequest {
  @SerializedName("startTimestamp")
  private BigDecimal startTimestamp = null;

  @SerializedName("endTimestamp")
  private BigDecimal endTimestamp = null;

  /**
   * Gets or Sets timeframe
   */
  @JsonAdapter(TimeframeEnum.Adapter.class)
  public enum TimeframeEnum {
    TIME_RANGE("TIME_RANGE"),
    INSTANT("INSTANT");

    private String value;

    TimeframeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TimeframeEnum fromValue(String text) {
      for (TimeframeEnum b : TimeframeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TimeframeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TimeframeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TimeframeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TimeframeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("timeframe")
  private TimeframeEnum timeframe = TimeframeEnum.TIME_RANGE;

  @SerializedName("fullname")
  private String fullname = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("url")
  private String url = null;

  public PostCustomEventRequest startTimestamp(BigDecimal startTimestamp) {
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * Custom event start epoch timestamp in seconds. If not provided, current time is used.
   * @return startTimestamp
  **/
  @Schema(example = "1600000000", description = "Custom event start epoch timestamp in seconds. If not provided, current time is used.")
  public BigDecimal getStartTimestamp() {
    return startTimestamp;
  }

  public void setStartTimestamp(BigDecimal startTimestamp) {
    this.startTimestamp = startTimestamp;
  }

  public PostCustomEventRequest endTimestamp(BigDecimal endTimestamp) {
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * Custom event end epoch timestamp in seconds. If not provided, then either startTimestamp is used (when timeframe is INSTANT), or test result end timestamp is used (when timeframe is TIME_RANGE).
   * @return endTimestamp
  **/
  @Schema(example = "1600000000", description = "Custom event end epoch timestamp in seconds. If not provided, then either startTimestamp is used (when timeframe is INSTANT), or test result end timestamp is used (when timeframe is TIME_RANGE).")
  public BigDecimal getEndTimestamp() {
    return endTimestamp;
  }

  public void setEndTimestamp(BigDecimal endTimestamp) {
    this.endTimestamp = endTimestamp;
  }

  public PostCustomEventRequest timeframe(TimeframeEnum timeframe) {
    this.timeframe = timeframe;
    return this;
  }

   /**
   * Get timeframe
   * @return timeframe
  **/
  @Schema(description = "")
  public TimeframeEnum getTimeframe() {
    return timeframe;
  }

  public void setTimeframe(TimeframeEnum timeframe) {
    this.timeframe = timeframe;
  }

  public PostCustomEventRequest fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

   /**
   * Custom event name. Max length 256 chars.
   * @return fullname
  **/
  @Schema(example = "myCustomEvent", required = true, description = "Custom event name. Max length 256 chars.")
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }

  public PostCustomEventRequest code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Custom event code. Max length 64 chars.
   * @return code
  **/
  @Schema(example = "Application Error", description = "Custom event code. Max length 64 chars.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public PostCustomEventRequest source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Custom event source. Max length 32 chars. If not set, source is set to &#x27;External&#x27;.
   * @return source
  **/
  @Schema(example = "APM", description = "Custom event source. Max length 32 chars. If not set, source is set to 'External'.")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public PostCustomEventRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Custom event description. Max length 2048 chars.
   * @return description
  **/
  @Schema(description = "Custom event description. Max length 2048 chars.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PostCustomEventRequest url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Custom event URL. Max length 2048 chars.
   * @return url
  **/
  @Schema(description = "Custom event URL. Max length 2048 chars.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostCustomEventRequest postCustomEventRequest = (PostCustomEventRequest) o;
    return Objects.equals(this.startTimestamp, postCustomEventRequest.startTimestamp) &&
        Objects.equals(this.endTimestamp, postCustomEventRequest.endTimestamp) &&
        Objects.equals(this.timeframe, postCustomEventRequest.timeframe) &&
        Objects.equals(this.fullname, postCustomEventRequest.fullname) &&
        Objects.equals(this.code, postCustomEventRequest.code) &&
        Objects.equals(this.source, postCustomEventRequest.source) &&
        Objects.equals(this.description, postCustomEventRequest.description) &&
        Objects.equals(this.url, postCustomEventRequest.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTimestamp, endTimestamp, timeframe, fullname, code, source, description, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostCustomEventRequest {\n");
    
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    timeframe: ").append(toIndentedString(timeframe)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
