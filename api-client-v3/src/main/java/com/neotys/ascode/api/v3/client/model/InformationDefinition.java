/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.neotys.ascode.api.v3.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InformationDefinition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-01T07:09:13.021Z[GMT]")
public class InformationDefinition {
  @SerializedName("front_url")
  private String frontUrl = null;

  @SerializedName("filestorage_url")
  private String filestorageUrl = null;

  @SerializedName("version")
  private String version = null;

  public InformationDefinition frontUrl(String frontUrl) {
    this.frontUrl = frontUrl;
    return this;
  }

   /**
   * Root URL where the NeoloadWeb application can be accessed, used to reconstruct relative URLs.
   * @return frontUrl
  **/
  @Schema(example = "https://preprod-neoload.saas.neotys.com", description = "Root URL where the NeoloadWeb application can be accessed, used to reconstruct relative URLs.")
  public String getFrontUrl() {
    return frontUrl;
  }

  public void setFrontUrl(String frontUrl) {
    this.frontUrl = frontUrl;
  }

  public InformationDefinition filestorageUrl(String filestorageUrl) {
    this.filestorageUrl = filestorageUrl;
    return this;
  }

   /**
   * URL for Neoload projects file upload and management.
   * @return filestorageUrl
  **/
  @Schema(example = "https://preprod-neoload.saas.neotys.com", description = "URL for Neoload projects file upload and management.")
  public String getFilestorageUrl() {
    return filestorageUrl;
  }

  public void setFilestorageUrl(String filestorageUrl) {
    this.filestorageUrl = filestorageUrl;
  }

  public InformationDefinition version(String version) {
    this.version = version;
    return this;
  }

   /**
   * NeoloadWeb platform version. Will be \&quot;SaaS\&quot; for official Neotys SaaS platform.
   * @return version
  **/
  @Schema(example = "2.4.0", description = "NeoloadWeb platform version. Will be \"SaaS\" for official Neotys SaaS platform.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InformationDefinition informationDefinition = (InformationDefinition) o;
    return Objects.equals(this.frontUrl, informationDefinition.frontUrl) &&
        Objects.equals(this.filestorageUrl, informationDefinition.filestorageUrl) &&
        Objects.equals(this.version, informationDefinition.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frontUrl, filestorageUrl, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InformationDefinition {\n");
    
    sb.append("    frontUrl: ").append(toIndentedString(frontUrl)).append("\n");
    sb.append("    filestorageUrl: ").append(toIndentedString(filestorageUrl)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
