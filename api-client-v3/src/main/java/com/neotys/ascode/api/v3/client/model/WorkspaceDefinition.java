/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.neotys.ascode.api.v3.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.neotys.ascode.api.v3.client.model.LastChangeDefinition;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * WorkspaceDefinition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-01T07:09:13.021Z[GMT]")
public class WorkspaceDefinition {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("lastChange")
  private LastChangeDefinition lastChange = null;

  public WorkspaceDefinition id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the Workspace.
   * @return id
  **/
  @Schema(example = "5e3acde2e860a132744ca916", description = "Unique identifier of the Workspace.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public WorkspaceDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the Workspace.
   * @return name
  **/
  @Schema(example = "Default Workspace", description = "Name of the Workspace.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WorkspaceDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the Workspace.
   * @return description
  **/
  @Schema(example = "Workspace description", description = "Description of the Workspace.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WorkspaceDefinition lastChange(LastChangeDefinition lastChange) {
    this.lastChange = lastChange;
    return this;
  }

   /**
   * Get lastChange
   * @return lastChange
  **/
  @Schema(description = "")
  public LastChangeDefinition getLastChange() {
    return lastChange;
  }

  public void setLastChange(LastChangeDefinition lastChange) {
    this.lastChange = lastChange;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkspaceDefinition workspaceDefinition = (WorkspaceDefinition) o;
    return Objects.equals(this.id, workspaceDefinition.id) &&
        Objects.equals(this.name, workspaceDefinition.name) &&
        Objects.equals(this.description, workspaceDefinition.description) &&
        Objects.equals(this.lastChange, workspaceDefinition.lastChange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, lastChange);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkspaceDefinition {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lastChange: ").append(toIndentedString(lastChange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
