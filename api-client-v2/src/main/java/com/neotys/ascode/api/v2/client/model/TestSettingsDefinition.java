/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.neotys.ascode.api.v2.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
/**
 * TestSettingsDefinition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-02T07:51:59.064Z[GMT]")
public class TestSettingsDefinition {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("userModifierName")
  private String userModifierName = null;

  @SerializedName("creationDate")
  private Long creationDate = null;

  @SerializedName("lastUpdateDate")
  private Long lastUpdateDate = null;

  @SerializedName("scenarioName")
  private String scenarioName = null;

  @SerializedName("controllerZoneId")
  private String controllerZoneId = null;

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("lgZonesIds")
  private Map<String, Integer> lgZonesIds = null;

  @SerializedName("nextRunId")
  private BigDecimal nextRunId = null;

  @SerializedName("testResultNamingPattern")
  private String testResultNamingPattern = null;

  public TestSettingsDefinition id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the test.
   * @return id
  **/
  @Schema(example = "5ed5350f-9f2f-4e2a-9acb-cdbcee874256", description = "Unique identifier of the test.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TestSettingsDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the test.
   * @return name
  **/
  @Schema(example = "New Test 1", description = "Name of the test.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestSettingsDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the test.
   * @return description
  **/
  @Schema(example = "My description", description = "Description of the test.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestSettingsDefinition userModifierName(String userModifierName) {
    this.userModifierName = userModifierName;
    return this;
  }

   /**
   * Identifier of the user who modified the test settings.
   * @return userModifierName
  **/
  @Schema(description = "Identifier of the user who modified the test settings.")
  public String getUserModifierName() {
    return userModifierName;
  }

  public void setUserModifierName(String userModifierName) {
    this.userModifierName = userModifierName;
  }

  public TestSettingsDefinition creationDate(Long creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Timestamp when the test settings was created. Number of seconds since January 1, 1970.
   * @return creationDate
  **/
  @Schema(example = "1582550441743", description = "Timestamp when the test settings was created. Number of seconds since January 1, 1970.")
  public Long getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Long creationDate) {
    this.creationDate = creationDate;
  }

  public TestSettingsDefinition lastUpdateDate(Long lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
    return this;
  }

   /**
   * Timestamp when the test settings was updated for the last time. Number of seconds since January 1, 1970.
   * @return lastUpdateDate
  **/
  @Schema(example = "1582550442163", description = "Timestamp when the test settings was updated for the last time. Number of seconds since January 1, 1970.")
  public Long getLastUpdateDate() {
    return lastUpdateDate;
  }

  public void setLastUpdateDate(Long lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
  }

  public TestSettingsDefinition scenarioName(String scenarioName) {
    this.scenarioName = scenarioName;
    return this;
  }

   /**
   * The name of the selected scenario.
   * @return scenarioName
  **/
  @Schema(example = "scenario1", description = "The name of the selected scenario.")
  public String getScenarioName() {
    return scenarioName;
  }

  public void setScenarioName(String scenarioName) {
    this.scenarioName = scenarioName;
  }

  public TestSettingsDefinition controllerZoneId(String controllerZoneId) {
    this.controllerZoneId = controllerZoneId;
    return this;
  }

   /**
   * The identifier of the controller.
   * @return controllerZoneId
  **/
  @Schema(example = "defaultzone", description = "The identifier of the controller.")
  public String getControllerZoneId() {
    return controllerZoneId;
  }

  public void setControllerZoneId(String controllerZoneId) {
    this.controllerZoneId = controllerZoneId;
  }

  public TestSettingsDefinition projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Id of project file.
   * @return projectId
  **/
  @Schema(example = "5e5fc0102cc4f82e5d9e18d4", description = "Id of project file.")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public TestSettingsDefinition lgZonesIds(Map<String, Integer> lgZonesIds) {
    this.lgZonesIds = lgZonesIds;
    return this;
  }

  public TestSettingsDefinition putLgZonesIdsItem(String key, Integer lgZonesIdsItem) {
    if (this.lgZonesIds == null) {
      this.lgZonesIds = new HashMap<String, Integer>();
    }
    this.lgZonesIds.put(key, lgZonesIdsItem);
    return this;
  }

   /**
   * The LG zones with the number of the LGs.
   * @return lgZonesIds
  **/
  @Schema(example = "{\"defaultzone\":10,\"ZoneId\":5}", description = "The LG zones with the number of the LGs.")
  public Map<String, Integer> getLgZonesIds() {
    return lgZonesIds;
  }

  public void setLgZonesIds(Map<String, Integer> lgZonesIds) {
    this.lgZonesIds = lgZonesIds;
  }

  public TestSettingsDefinition nextRunId(BigDecimal nextRunId) {
    this.nextRunId = nextRunId;
    return this;
  }

   /**
   * The next run number. The value is incremented at each execution of the test.
   * @return nextRunId
  **/
  @Schema(description = "The next run number. The value is incremented at each execution of the test.")
  public BigDecimal getNextRunId() {
    return nextRunId;
  }

  public void setNextRunId(BigDecimal nextRunId) {
    this.nextRunId = nextRunId;
  }

  public TestSettingsDefinition testResultNamingPattern(String testResultNamingPattern) {
    this.testResultNamingPattern = testResultNamingPattern;
    return this;
  }

   /**
   * Pattern of the test results name.
   * @return testResultNamingPattern
  **/
  @Schema(example = "#${runID}", description = "Pattern of the test results name.")
  public String getTestResultNamingPattern() {
    return testResultNamingPattern;
  }

  public void setTestResultNamingPattern(String testResultNamingPattern) {
    this.testResultNamingPattern = testResultNamingPattern;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestSettingsDefinition testSettingsDefinition = (TestSettingsDefinition) o;
    return Objects.equals(this.id, testSettingsDefinition.id) &&
        Objects.equals(this.name, testSettingsDefinition.name) &&
        Objects.equals(this.description, testSettingsDefinition.description) &&
        Objects.equals(this.userModifierName, testSettingsDefinition.userModifierName) &&
        Objects.equals(this.creationDate, testSettingsDefinition.creationDate) &&
        Objects.equals(this.lastUpdateDate, testSettingsDefinition.lastUpdateDate) &&
        Objects.equals(this.scenarioName, testSettingsDefinition.scenarioName) &&
        Objects.equals(this.controllerZoneId, testSettingsDefinition.controllerZoneId) &&
        Objects.equals(this.projectId, testSettingsDefinition.projectId) &&
        Objects.equals(this.lgZonesIds, testSettingsDefinition.lgZonesIds) &&
        Objects.equals(this.nextRunId, testSettingsDefinition.nextRunId) &&
        Objects.equals(this.testResultNamingPattern, testSettingsDefinition.testResultNamingPattern);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, userModifierName, creationDate, lastUpdateDate, scenarioName, controllerZoneId, projectId, lgZonesIds, nextRunId, testResultNamingPattern);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestSettingsDefinition {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    userModifierName: ").append(toIndentedString(userModifierName)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastUpdateDate: ").append(toIndentedString(lastUpdateDate)).append("\n");
    sb.append("    scenarioName: ").append(toIndentedString(scenarioName)).append("\n");
    sb.append("    controllerZoneId: ").append(toIndentedString(controllerZoneId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    lgZonesIds: ").append(toIndentedString(lgZonesIds)).append("\n");
    sb.append("    nextRunId: ").append(toIndentedString(nextRunId)).append("\n");
    sb.append("    testResultNamingPattern: ").append(toIndentedString(testResultNamingPattern)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
