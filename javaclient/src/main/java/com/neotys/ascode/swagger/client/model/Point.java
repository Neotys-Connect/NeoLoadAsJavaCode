/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.neotys.ascode.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Point
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-13T10:37:42.246Z[GMT]")
public class Point {
  @SerializedName("from")
  private Long from = null;

  @SerializedName("to")
  private Long to = null;

  @SerializedName("AVG_DURATION")
  private Float AVG_DURATION = null;

  @SerializedName("MIN_DURATION")
  private Float MIN_DURATION = null;

  @SerializedName("MAX_DURATION")
  private Float MAX_DURATION = null;

  @SerializedName("COUNT")
  private Float COUNT = null;

  @SerializedName("THROUGHPUT")
  private Float THROUGHPUT = null;

  @SerializedName("ELEMENTS_PER_SECOND")
  private Float ELEMENTS_PER_SECOND = null;

  @SerializedName("ERRORS")
  private Float ERRORS = null;

  @SerializedName("ERRORS_PER_SECOND")
  private Float ERRORS_PER_SECOND = null;

  @SerializedName("ERROR_RATE")
  private Float ERROR_RATE = null;

  @SerializedName("AVG_TTFB")
  private Float AVG_TTFB = null;

  @SerializedName("MIN_TTFB")
  private Float MIN_TTFB = null;

  @SerializedName("MAX_TTFB")
  private Float MAX_TTFB = null;

  @SerializedName("AVG")
  private Float AVG = null;

  public Point from(Long from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   **/
  @Schema(description = "")
  public Long getFrom() {
    return from;
  }

  public void setFrom(Long from) {
    this.from = from;
  }

  public Point to(Long to) {
    this.to = to;
    return this;
  }

  /**
   * Get to
   * @return to
   **/
  @Schema(description = "")
  public Long getTo() {
    return to;
  }

  public void setTo(Long to) {
    this.to = to;
  }

  public Point AVG_DURATION(Float AVG_DURATION) {
    this.AVG_DURATION = AVG_DURATION;
    return this;
  }

  /**
   * Get AVG_DURATION
   * @return AVG_DURATION
   **/
  @Schema(description = "")
  public Float getAVGDURATION() {
    return AVG_DURATION;
  }

  public void setAVGDURATION(Float AVG_DURATION) {
    this.AVG_DURATION = AVG_DURATION;
  }

  public Point MIN_DURATION(Float MIN_DURATION) {
    this.MIN_DURATION = MIN_DURATION;
    return this;
  }

  /**
   * Get MIN_DURATION
   * @return MIN_DURATION
   **/
  @Schema(description = "")
  public Float getMINDURATION() {
    return MIN_DURATION;
  }

  public void setMINDURATION(Float MIN_DURATION) {
    this.MIN_DURATION = MIN_DURATION;
  }

  public Point MAX_DURATION(Float MAX_DURATION) {
    this.MAX_DURATION = MAX_DURATION;
    return this;
  }

  /**
   * Get MAX_DURATION
   * @return MAX_DURATION
   **/
  @Schema(description = "")
  public Float getMAXDURATION() {
    return MAX_DURATION;
  }

  public void setMAXDURATION(Float MAX_DURATION) {
    this.MAX_DURATION = MAX_DURATION;
  }

  public Point COUNT(Float COUNT) {
    this.COUNT = COUNT;
    return this;
  }

  /**
   * Get COUNT
   * @return COUNT
   **/
  @Schema(description = "")
  public Float getCOUNT() {
    return COUNT;
  }

  public void setCOUNT(Float COUNT) {
    this.COUNT = COUNT;
  }

  public Point THROUGHPUT(Float THROUGHPUT) {
    this.THROUGHPUT = THROUGHPUT;
    return this;
  }

  /**
   * Get THROUGHPUT
   * @return THROUGHPUT
   **/
  @Schema(description = "")
  public Float getTHROUGHPUT() {
    return THROUGHPUT;
  }

  public void setTHROUGHPUT(Float THROUGHPUT) {
    this.THROUGHPUT = THROUGHPUT;
  }

  public Point ELEMENTS_PER_SECOND(Float ELEMENTS_PER_SECOND) {
    this.ELEMENTS_PER_SECOND = ELEMENTS_PER_SECOND;
    return this;
  }

  /**
   * Get ELEMENTS_PER_SECOND
   * @return ELEMENTS_PER_SECOND
   **/
  @Schema(description = "")
  public Float getELEMENTSPERSECOND() {
    return ELEMENTS_PER_SECOND;
  }

  public void setELEMENTSPERSECOND(Float ELEMENTS_PER_SECOND) {
    this.ELEMENTS_PER_SECOND = ELEMENTS_PER_SECOND;
  }

  public Point ERRORS(Float ERRORS) {
    this.ERRORS = ERRORS;
    return this;
  }

  /**
   * Get ERRORS
   * @return ERRORS
   **/
  @Schema(description = "")
  public Float getERRORS() {
    return ERRORS;
  }

  public void setERRORS(Float ERRORS) {
    this.ERRORS = ERRORS;
  }

  public Point ERRORS_PER_SECOND(Float ERRORS_PER_SECOND) {
    this.ERRORS_PER_SECOND = ERRORS_PER_SECOND;
    return this;
  }

  /**
   * Get ERRORS_PER_SECOND
   * @return ERRORS_PER_SECOND
   **/
  @Schema(description = "")
  public Float getERRORSPERSECOND() {
    return ERRORS_PER_SECOND;
  }

  public void setERRORSPERSECOND(Float ERRORS_PER_SECOND) {
    this.ERRORS_PER_SECOND = ERRORS_PER_SECOND;
  }

  public Point ERROR_RATE(Float ERROR_RATE) {
    this.ERROR_RATE = ERROR_RATE;
    return this;
  }

  /**
   * Get ERROR_RATE
   * @return ERROR_RATE
   **/
  @Schema(description = "")
  public Float getERRORRATE() {
    return ERROR_RATE;
  }

  public void setERRORRATE(Float ERROR_RATE) {
    this.ERROR_RATE = ERROR_RATE;
  }

  public Point AVG_TTFB(Float AVG_TTFB) {
    this.AVG_TTFB = AVG_TTFB;
    return this;
  }

  /**
   * Get AVG_TTFB
   * @return AVG_TTFB
   **/
  @Schema(description = "")
  public Float getAVGTTFB() {
    return AVG_TTFB;
  }

  public void setAVGTTFB(Float AVG_TTFB) {
    this.AVG_TTFB = AVG_TTFB;
  }

  public Point MIN_TTFB(Float MIN_TTFB) {
    this.MIN_TTFB = MIN_TTFB;
    return this;
  }

  /**
   * Get MIN_TTFB
   * @return MIN_TTFB
   **/
  @Schema(description = "")
  public Float getMINTTFB() {
    return MIN_TTFB;
  }

  public void setMINTTFB(Float MIN_TTFB) {
    this.MIN_TTFB = MIN_TTFB;
  }

  public Point MAX_TTFB(Float MAX_TTFB) {
    this.MAX_TTFB = MAX_TTFB;
    return this;
  }

  /**
   * Get MAX_TTFB
   * @return MAX_TTFB
   **/
  @Schema(description = "")
  public Float getMAXTTFB() {
    return MAX_TTFB;
  }

  public void setMAXTTFB(Float MAX_TTFB) {
    this.MAX_TTFB = MAX_TTFB;
  }

  public Point AVG(Float AVG) {
    this.AVG = AVG;
    return this;
  }

  /**
   * Get AVG
   * @return AVG
   **/
  @Schema(description = "")
  public Float getAVG() {
    return AVG;
  }

  public void setAVG(Float AVG) {
    this.AVG = AVG;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Point point = (Point) o;
    return Objects.equals(this.from, point.from) &&
            Objects.equals(this.to, point.to) &&
            Objects.equals(this.AVG_DURATION, point.AVG_DURATION) &&
            Objects.equals(this.MIN_DURATION, point.MIN_DURATION) &&
            Objects.equals(this.MAX_DURATION, point.MAX_DURATION) &&
            Objects.equals(this.COUNT, point.COUNT) &&
            Objects.equals(this.THROUGHPUT, point.THROUGHPUT) &&
            Objects.equals(this.ELEMENTS_PER_SECOND, point.ELEMENTS_PER_SECOND) &&
            Objects.equals(this.ERRORS, point.ERRORS) &&
            Objects.equals(this.ERRORS_PER_SECOND, point.ERRORS_PER_SECOND) &&
            Objects.equals(this.ERROR_RATE, point.ERROR_RATE) &&
            Objects.equals(this.AVG_TTFB, point.AVG_TTFB) &&
            Objects.equals(this.MIN_TTFB, point.MIN_TTFB) &&
            Objects.equals(this.MAX_TTFB, point.MAX_TTFB) &&
            Objects.equals(this.AVG, point.AVG);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to, AVG_DURATION, MIN_DURATION, MAX_DURATION, COUNT, THROUGHPUT, ELEMENTS_PER_SECOND, ERRORS, ERRORS_PER_SECOND, ERROR_RATE, AVG_TTFB, MIN_TTFB, MAX_TTFB, AVG);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Point {\n");

    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    AVG_DURATION: ").append(toIndentedString(AVG_DURATION)).append("\n");
    sb.append("    MIN_DURATION: ").append(toIndentedString(MIN_DURATION)).append("\n");
    sb.append("    MAX_DURATION: ").append(toIndentedString(MAX_DURATION)).append("\n");
    sb.append("    COUNT: ").append(toIndentedString(COUNT)).append("\n");
    sb.append("    THROUGHPUT: ").append(toIndentedString(THROUGHPUT)).append("\n");
    sb.append("    ELEMENTS_PER_SECOND: ").append(toIndentedString(ELEMENTS_PER_SECOND)).append("\n");
    sb.append("    ERRORS: ").append(toIndentedString(ERRORS)).append("\n");
    sb.append("    ERRORS_PER_SECOND: ").append(toIndentedString(ERRORS_PER_SECOND)).append("\n");
    sb.append("    ERROR_RATE: ").append(toIndentedString(ERROR_RATE)).append("\n");
    sb.append("    AVG_TTFB: ").append(toIndentedString(AVG_TTFB)).append("\n");
    sb.append("    MIN_TTFB: ").append(toIndentedString(MIN_TTFB)).append("\n");
    sb.append("    MAX_TTFB: ").append(toIndentedString(MAX_TTFB)).append("\n");
    sb.append("    AVG: ").append(toIndentedString(AVG)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}