/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.ascode.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

/**
 * MonitorPostRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2018-09-05T15:48:08.071+02:00[Europe/Paris]")
public class MonitorPostRequest {

  @SerializedName("monitors")
  private List<CustomMonitor> monitors = null;
  
  public MonitorPostRequest monitors(List<CustomMonitor> monitors) {
    this.monitors = monitors;
    return this;
  }

  public MonitorPostRequest addMonitorsItem(CustomMonitor monitorsItem) {
    
    if (this.monitors == null) {
      this.monitors = new ArrayList<CustomMonitor>();
    }
    
    this.monitors.add(monitorsItem);
    return this;
  }
  
  /**
  * Get monitors
  * @return monitors
  **/
  
  
  @Schema(description = "")
  public List<CustomMonitor> getMonitors() {
    return monitors;
  }
  public void setMonitors(List<CustomMonitor> monitors) {
    this.monitors = monitors;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitorPostRequest monitorPostRequest = (MonitorPostRequest) o;
    return Objects.equals(this.monitors, monitorPostRequest.monitors);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(monitors);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitorPostRequest {\n");
    
    sb.append("    monitors: ").append(toIndentedString(monitors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



