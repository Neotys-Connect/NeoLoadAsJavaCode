/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.neotys.ascode.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ElementValues
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2018-09-05T15:48:08.071+02:00[Europe/Paris]")
public class ElementValues {

  @SerializedName("count")
  private Long count = null;
  
  @SerializedName("elementPerSecond")
  private Float elementPerSecond = null;
  
  @SerializedName("minDuration")
  private Long minDuration = null;
  
  @SerializedName("maxDuration")
  private Long maxDuration = null;
  
  @SerializedName("sumDuration")
  private Long sumDuration = null;
  
  @SerializedName("avgDuration")
  private Float avgDuration = null;
  
  @SerializedName("minTTFB")
  private Long minTTFB = null;
  
  @SerializedName("maxTTFB")
  private Long maxTTFB = null;
  
  @SerializedName("sumTTFB")
  private Long sumTTFB = null;
  
  @SerializedName("avgTTFB")
  private Float avgTTFB = null;
  
  @SerializedName("sumDownloadedBytes")
  private Long sumDownloadedBytes = null;
  
  @SerializedName("downloadedBytesPerSecond")
  private Float downloadedBytesPerSecond = null;
  
  @SerializedName("successCount")
  private Long successCount = null;
  
  @SerializedName("successPerSecond")
  private Float successPerSecond = null;
  
  @SerializedName("successRate")
  private Float successRate = null;
  
  @SerializedName("failureCount")
  private Long failureCount = null;
  
  @SerializedName("failurePerSecond")
  private Float failurePerSecond = null;
  
  @SerializedName("failureRate")
  private Float failureRate = null;
  
  public ElementValues count(Long count) {
    this.count = count;
    return this;
  }

  
  /**
  * Get count
  * @return count
  **/
  
  
  @Schema(description = "")
  public Long getCount() {
    return count;
  }
  public void setCount(Long count) {
    this.count = count;
  }
  
  public ElementValues elementPerSecond(Float elementPerSecond) {
    this.elementPerSecond = elementPerSecond;
    return this;
  }

  
  /**
  * Get elementPerSecond
  * @return elementPerSecond
  **/
  
  
  @Schema(description = "")
  public Float getElementPerSecond() {
    return elementPerSecond;
  }
  public void setElementPerSecond(Float elementPerSecond) {
    this.elementPerSecond = elementPerSecond;
  }
  
  public ElementValues minDuration(Long minDuration) {
    this.minDuration = minDuration;
    return this;
  }

  
  /**
  * Get minDuration
  * @return minDuration
  **/
  
  
  @Schema(description = "")
  public Long getMinDuration() {
    return minDuration;
  }
  public void setMinDuration(Long minDuration) {
    this.minDuration = minDuration;
  }
  
  public ElementValues maxDuration(Long maxDuration) {
    this.maxDuration = maxDuration;
    return this;
  }

  
  /**
  * Get maxDuration
  * @return maxDuration
  **/
  
  
  @Schema(description = "")
  public Long getMaxDuration() {
    return maxDuration;
  }
  public void setMaxDuration(Long maxDuration) {
    this.maxDuration = maxDuration;
  }
  
  public ElementValues sumDuration(Long sumDuration) {
    this.sumDuration = sumDuration;
    return this;
  }

  
  /**
  * Get sumDuration
  * @return sumDuration
  **/
  
  
  @Schema(description = "")
  public Long getSumDuration() {
    return sumDuration;
  }
  public void setSumDuration(Long sumDuration) {
    this.sumDuration = sumDuration;
  }
  
  public ElementValues avgDuration(Float avgDuration) {
    this.avgDuration = avgDuration;
    return this;
  }

  
  /**
  * Get avgDuration
  * @return avgDuration
  **/
  
  
  @Schema(description = "")
  public Float getAvgDuration() {
    return avgDuration;
  }
  public void setAvgDuration(Float avgDuration) {
    this.avgDuration = avgDuration;
  }
  
  public ElementValues minTTFB(Long minTTFB) {
    this.minTTFB = minTTFB;
    return this;
  }

  
  /**
  * Get minTTFB
  * @return minTTFB
  **/
  
  
  @Schema(description = "")
  public Long getMinTTFB() {
    return minTTFB;
  }
  public void setMinTTFB(Long minTTFB) {
    this.minTTFB = minTTFB;
  }
  
  public ElementValues maxTTFB(Long maxTTFB) {
    this.maxTTFB = maxTTFB;
    return this;
  }

  
  /**
  * Get maxTTFB
  * @return maxTTFB
  **/
  
  
  @Schema(description = "")
  public Long getMaxTTFB() {
    return maxTTFB;
  }
  public void setMaxTTFB(Long maxTTFB) {
    this.maxTTFB = maxTTFB;
  }
  
  public ElementValues sumTTFB(Long sumTTFB) {
    this.sumTTFB = sumTTFB;
    return this;
  }

  
  /**
  * Get sumTTFB
  * @return sumTTFB
  **/
  
  
  @Schema(description = "")
  public Long getSumTTFB() {
    return sumTTFB;
  }
  public void setSumTTFB(Long sumTTFB) {
    this.sumTTFB = sumTTFB;
  }
  
  public ElementValues avgTTFB(Float avgTTFB) {
    this.avgTTFB = avgTTFB;
    return this;
  }

  
  /**
  * Get avgTTFB
  * @return avgTTFB
  **/
  
  
  @Schema(description = "")
  public Float getAvgTTFB() {
    return avgTTFB;
  }
  public void setAvgTTFB(Float avgTTFB) {
    this.avgTTFB = avgTTFB;
  }
  
  public ElementValues sumDownloadedBytes(Long sumDownloadedBytes) {
    this.sumDownloadedBytes = sumDownloadedBytes;
    return this;
  }

  
  /**
  * Get sumDownloadedBytes
  * @return sumDownloadedBytes
  **/
  
  
  @Schema(description = "")
  public Long getSumDownloadedBytes() {
    return sumDownloadedBytes;
  }
  public void setSumDownloadedBytes(Long sumDownloadedBytes) {
    this.sumDownloadedBytes = sumDownloadedBytes;
  }
  
  public ElementValues downloadedBytesPerSecond(Float downloadedBytesPerSecond) {
    this.downloadedBytesPerSecond = downloadedBytesPerSecond;
    return this;
  }

  
  /**
  * Get downloadedBytesPerSecond
  * @return downloadedBytesPerSecond
  **/
  
  
  @Schema(description = "")
  public Float getDownloadedBytesPerSecond() {
    return downloadedBytesPerSecond;
  }
  public void setDownloadedBytesPerSecond(Float downloadedBytesPerSecond) {
    this.downloadedBytesPerSecond = downloadedBytesPerSecond;
  }
  
  public ElementValues successCount(Long successCount) {
    this.successCount = successCount;
    return this;
  }

  
  /**
  * Get successCount
  * @return successCount
  **/
  
  
  @Schema(description = "")
  public Long getSuccessCount() {
    return successCount;
  }
  public void setSuccessCount(Long successCount) {
    this.successCount = successCount;
  }
  
  public ElementValues successPerSecond(Float successPerSecond) {
    this.successPerSecond = successPerSecond;
    return this;
  }

  
  /**
  * Get successPerSecond
  * @return successPerSecond
  **/
  
  
  @Schema(description = "")
  public Float getSuccessPerSecond() {
    return successPerSecond;
  }
  public void setSuccessPerSecond(Float successPerSecond) {
    this.successPerSecond = successPerSecond;
  }
  
  public ElementValues successRate(Float successRate) {
    this.successRate = successRate;
    return this;
  }

  
  /**
  * Get successRate
  * @return successRate
  **/
  
  
  @Schema(description = "")
  public Float getSuccessRate() {
    return successRate;
  }
  public void setSuccessRate(Float successRate) {
    this.successRate = successRate;
  }
  
  public ElementValues failureCount(Long failureCount) {
    this.failureCount = failureCount;
    return this;
  }

  
  /**
  * Get failureCount
  * @return failureCount
  **/
  
  
  @Schema(description = "")
  public Long getFailureCount() {
    return failureCount;
  }
  public void setFailureCount(Long failureCount) {
    this.failureCount = failureCount;
  }
  
  public ElementValues failurePerSecond(Float failurePerSecond) {
    this.failurePerSecond = failurePerSecond;
    return this;
  }

  
  /**
  * Get failurePerSecond
  * @return failurePerSecond
  **/
  
  
  @Schema(description = "")
  public Float getFailurePerSecond() {
    return failurePerSecond;
  }
  public void setFailurePerSecond(Float failurePerSecond) {
    this.failurePerSecond = failurePerSecond;
  }
  
  public ElementValues failureRate(Float failureRate) {
    this.failureRate = failureRate;
    return this;
  }

  
  /**
  * Get failureRate
  * @return failureRate
  **/
  
  
  @Schema(description = "")
  public Float getFailureRate() {
    return failureRate;
  }
  public void setFailureRate(Float failureRate) {
    this.failureRate = failureRate;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElementValues elementValues = (ElementValues) o;
    return Objects.equals(this.count, elementValues.count) &&
        Objects.equals(this.elementPerSecond, elementValues.elementPerSecond) &&
        Objects.equals(this.minDuration, elementValues.minDuration) &&
        Objects.equals(this.maxDuration, elementValues.maxDuration) &&
        Objects.equals(this.sumDuration, elementValues.sumDuration) &&
        Objects.equals(this.avgDuration, elementValues.avgDuration) &&
        Objects.equals(this.minTTFB, elementValues.minTTFB) &&
        Objects.equals(this.maxTTFB, elementValues.maxTTFB) &&
        Objects.equals(this.sumTTFB, elementValues.sumTTFB) &&
        Objects.equals(this.avgTTFB, elementValues.avgTTFB) &&
        Objects.equals(this.sumDownloadedBytes, elementValues.sumDownloadedBytes) &&
        Objects.equals(this.downloadedBytesPerSecond, elementValues.downloadedBytesPerSecond) &&
        Objects.equals(this.successCount, elementValues.successCount) &&
        Objects.equals(this.successPerSecond, elementValues.successPerSecond) &&
        Objects.equals(this.successRate, elementValues.successRate) &&
        Objects.equals(this.failureCount, elementValues.failureCount) &&
        Objects.equals(this.failurePerSecond, elementValues.failurePerSecond) &&
        Objects.equals(this.failureRate, elementValues.failureRate);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(count, elementPerSecond, minDuration, maxDuration, sumDuration, avgDuration, minTTFB, maxTTFB, sumTTFB, avgTTFB, sumDownloadedBytes, downloadedBytesPerSecond, successCount, successPerSecond, successRate, failureCount, failurePerSecond, failureRate);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElementValues {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    elementPerSecond: ").append(toIndentedString(elementPerSecond)).append("\n");
    sb.append("    minDuration: ").append(toIndentedString(minDuration)).append("\n");
    sb.append("    maxDuration: ").append(toIndentedString(maxDuration)).append("\n");
    sb.append("    sumDuration: ").append(toIndentedString(sumDuration)).append("\n");
    sb.append("    avgDuration: ").append(toIndentedString(avgDuration)).append("\n");
    sb.append("    minTTFB: ").append(toIndentedString(minTTFB)).append("\n");
    sb.append("    maxTTFB: ").append(toIndentedString(maxTTFB)).append("\n");
    sb.append("    sumTTFB: ").append(toIndentedString(sumTTFB)).append("\n");
    sb.append("    avgTTFB: ").append(toIndentedString(avgTTFB)).append("\n");
    sb.append("    sumDownloadedBytes: ").append(toIndentedString(sumDownloadedBytes)).append("\n");
    sb.append("    downloadedBytesPerSecond: ").append(toIndentedString(downloadedBytesPerSecond)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("    successPerSecond: ").append(toIndentedString(successPerSecond)).append("\n");
    sb.append("    successRate: ").append(toIndentedString(successRate)).append("\n");
    sb.append("    failureCount: ").append(toIndentedString(failureCount)).append("\n");
    sb.append("    failurePerSecond: ").append(toIndentedString(failurePerSecond)).append("\n");
    sb.append("    failureRate: ").append(toIndentedString(failureRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



